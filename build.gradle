plugins {
    id 'java'
    id 'io.freefair.lombok' version '8.2.2'
    id 'nu.studer.jooq' version '8.2'
    id 'org.liquibase.gradle' version '2.2.0'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.grigoryev'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = targetCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    postgresqlVersion = '42.6.0'
    liquibaseVersion = '4.23.1'
    picocliVersion = '4.7.5'
    mapstructVersion = '1.5.3.Final'
    jooqVersion = '3.18.6'
    testContainerVersion = '1.19.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    jooqGenerator "org.postgresql:postgresql:${postgresqlVersion}"

    liquibaseRuntime "org.liquibase:liquibase-core:$liquibaseVersion"
    liquibaseRuntime "info.picocli:picocli:$picocliVersion"
    liquibaseRuntime "org.postgresql:postgresql:$postgresqlVersion"

    runtimeOnly 'org.postgresql:r2dbc-postgresql'

    testImplementation "org.testcontainers:postgresql:${testContainerVersion}"
    testImplementation "org.testcontainers:r2dbc:${testContainerVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

liquibase {
    activities {
        createTables {
            changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
            driver 'org.postgresql.Driver'
            url project.ext.url
            username project.ext.username
            password project.ext.password
        }
    }
}

jooq {
    version = "${jooqVersion}"
    configurations {
        main {
            generationTool {
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = project.ext.url
                    user = project.ext.username
                    password = project.ext.password
                }
                generator {
                    database {
                        inputSchema = 'public'
                        excludes = 'databasechangelog|databasechangeloglock'
                    }
                    generate {
                        pojosEqualsAndHashCode = true
                        relations = true
                        deprecated = false
                        records = true
                        pojos = true
                        immutablePojos = false
                        fluentSetters = true
                    }
                    target {
                        packageName = 'com.grigoryev.cleverbankreactiveremaster'
                        directory = 'build/generated/sources/jooq/main'
                    }
                }
            }
        }
    }
}

generateJooq.dependsOn(update)

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}
